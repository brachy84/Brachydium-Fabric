plugins {
	id 'fabric-loom' version '0.9-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenCentral()
	// REI
	maven { url "https://maven.shedaniel.me/" }

	// ARRP
	maven {
		url "https://storage.googleapis.com/devan-maven/"
	}
	// wthit aka waila
	maven {
		url "https://bai.jfrog.io/artifactory/maven"
	}
	maven {
		url "https://repo.repsy.io/mvn/brachy84/brachydium-gui"
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// BrachydiumGui
	include modImplementation("brachy84:brachydium-gui:${project.brachydium_gui_version}");
	// REI
	modImplementation "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
	// ARRP
	include(modImplementation("net.devtech:arrp:${project.arrp_version}"))
	// WAILA
	modCompileOnly "mcp.mobius.waila:wthit-api:fabric-${project.wthit_version}"
	// Cloth config
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_cfg_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 16
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}
    
    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}

runClient {
	args ["-Xmx4G"]
}
